"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _field = _interopRequireDefault(require("./field"));

var _excluded = ["children", "defaultIsChecked", "value"],
    _excluded2 = ["value"],
    _excluded3 = ["fieldProps"],
    _excluded4 = ["value"],
    _excluded5 = ["fieldProps"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

/**
 * __Checkbox field__
 *
 * A checkbox field is a form field that lets users select an item. Users can check or uncheck the checkbox.
 *
 * - [Examples] https://atlaskit.atlassian.com/packages/design-system/form/docs/fields#checkboxfield-reference
 * - [Code] https://atlaskit.atlassian.com/packages/design-system/form/docs/fields#checkboxfield-reference
 * - [Usage] https://atlaskit.atlassian.com/packages/design-system/form/docs/fields#checkboxfield-reference
 */
var CheckboxField = function CheckboxField(props) {
  var children = props.children,
      _props$defaultIsCheck = props.defaultIsChecked,
      defaultIsChecked = _props$defaultIsCheck === void 0 ? false : _props$defaultIsCheck,
      value = props.value,
      rest = (0, _objectWithoutProperties2.default)(props, _excluded); // Maintains a memoised list of the default values

  var defaultValue = (0, _react.useCallback)(function () {
    var currentValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    return defaultIsChecked && value !== undefined ? [].concat((0, _toConsumableArray2.default)(currentValue), [value]) : currentValue;
  }, [value, defaultIsChecked]);
  return value !== undefined ? /*#__PURE__*/_react.default.createElement(_field.default, (0, _extends2.default)({}, rest, {
    defaultValue: defaultValue,
    transform: function transform(event, currentValue) {
      return event.currentTarget.checked && currentValue ? [].concat((0, _toConsumableArray2.default)(currentValue), [value]) : currentValue.filter(function (v) {
        return v !== value;
      });
    }
  }), function (_ref) {
    var _ref$fieldProps = _ref.fieldProps,
        fieldValue = _ref$fieldProps.value,
        otherFieldProps = (0, _objectWithoutProperties2.default)(_ref$fieldProps, _excluded2),
        others = (0, _objectWithoutProperties2.default)(_ref, _excluded3);
    return children(_objectSpread({
      fieldProps: _objectSpread(_objectSpread({}, otherFieldProps), {}, {
        isChecked: !!fieldValue.find(function (v) {
          return v === value;
        }),
        value: value
      })
    }, others));
  }) : /*#__PURE__*/_react.default.createElement(_field.default, (0, _extends2.default)({}, rest, {
    defaultValue: defaultIsChecked,
    transform: function transform(event) {
      return event.currentTarget.checked;
    }
  }), function (_ref2) {
    var _ref2$fieldProps = _ref2.fieldProps,
        fieldValue = _ref2$fieldProps.value,
        otherFieldProps = (0, _objectWithoutProperties2.default)(_ref2$fieldProps, _excluded4),
        others = (0, _objectWithoutProperties2.default)(_ref2, _excluded5);
    return children(_objectSpread({
      fieldProps: _objectSpread(_objectSpread({}, otherFieldProps), {}, {
        isChecked: fieldValue,
        value: value
      })
    }, others));
  });
};

CheckboxField.defaultProps = {
  defaultIsChecked: false
};
var _default = CheckboxField;
exports.default = _default;