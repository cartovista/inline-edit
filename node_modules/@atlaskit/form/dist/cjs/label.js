"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _core = require("@emotion/core");

var _components = require("@atlaskit/theme/components");

var _constants = require("@atlaskit/theme/constants");

var _typography = require("@atlaskit/theme/typography");

/** @jsx jsx */
var fontFamily = (0, _constants.fontFamily)();
var gridSize = (0, _constants.gridSize)();
var labelStyles = (0, _core.css)({
  display: 'inline-block',
  marginTop: 0,
  marginBottom: gridSize / 2,
  fontFamily: fontFamily
}); // eslint-disable-next-line @repo/internal/react/consistent-css-prop-usage

var lightH200Styles = (0, _core.css)((0, _typography.h200)({
  theme: {
    mode: 'light'
  }
})); // eslint-disable-next-line @repo/internal/react/consistent-css-prop-usage

var darkH200Styles = (0, _core.css)((0, _typography.h200)({
  theme: {
    mode: 'dark'
  }
}));
/**
 * __Label__
 *
 * A label represents a caption for an item in a user interface.
 *
 * It's recommended that a label has a `4px` spacing above its associated
 * control element.
 */

var Label = function Label(_ref) {
  var children = _ref.children,
      htmlFor = _ref.htmlFor,
      id = _ref.id;

  var _useGlobalTheme = (0, _components.useGlobalTheme)(),
      mode = _useGlobalTheme.mode;

  return (0, _core.jsx)("label", {
    css: [mode === 'light' ? lightH200Styles : darkH200Styles, labelStyles],
    id: id,
    htmlFor: htmlFor
  }, children);
};

var _default = Label;
exports.default = _default;