/** @jsx jsx */
import React, { ReactNode } from 'react';
interface MessageProps {
    /**
     * The content of the message
     */
    children: ReactNode;
    /**
     * A testId prop is provided for specified elements, which is a unique string
     *  that appears as a data attribute data-testid in the rendered code,
     *  serving as a hook for automated tests
     */
    testId?: string;
    /**
     * Checks whether message input is invalid and should show an error.
     */
    error?: boolean;
    /**
     * Checks whether message input is valid.
     */
    valid?: boolean;
    fieldId?: string;
}
/**
 * __Helper message__
 *
 * A helper message tells the user what kind of input the field takes. For example, a helper message could be
 * 'Password should be more than 4 characters'
 *
 */
export declare const HelperMessage: React.FC<MessageProps>;
/**
 * __Error message__
 *
 * An error message is used to tell a user that the field input is invalid. For example, an error message could be
 * 'Invalid username, needs to be more than 4 characters'.
 *
 */
export declare const ErrorMessage: React.FC<MessageProps>;
/**
 * __Valid message__
 *
 * A valid message is used to tell a user that the field input is valid. For example,
 * a helper message could be 'Nice one, this username is available'.
 *
 */
export declare const ValidMessage: React.FC<MessageProps>;
export {};
