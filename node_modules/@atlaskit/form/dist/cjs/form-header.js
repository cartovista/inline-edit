"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.FormHeaderTitle = exports.FormHeaderDescription = exports.FormHeaderContent = void 0;

var _core = require("@emotion/core");

var _components = require("@atlaskit/theme/components");

var _constants = require("@atlaskit/theme/constants");

var _typography = require("@atlaskit/theme/typography");

/** @jsx jsx */
var gridSize = (0, _constants.gridSize)();
var fontFamily = (0, _constants.fontFamily)();
var formHeaderContentStyles = (0, _core.css)({
  minWidth: '100%',
  marginTop: "".concat(gridSize, "px")
});
var formHeaderDescriptionStyles = (0, _core.css)({
  marginTop: "".concat(gridSize, "px")
});
var formHeaderTitleStyles = (0, _core.css)({
  marginTop: 0,
  marginRight: "".concat(gridSize * 4, "px"),
  lineHeight: "".concat(gridSize * 4, "px"),
  overflow: 'hidden',
  textOverflow: 'ellipsis',
  whiteSpace: 'nowrap'
});
var formHeaderWrapperStyles = (0, _core.css)({
  fontFamily: "".concat(fontFamily)
}); // eslint-disable-next-line @repo/internal/react/consistent-css-prop-usage

var darkH700Styles = (0, _core.css)((0, _typography.h700)({
  theme: {
    mode: 'dark'
  }
})); // eslint-disable-next-line @repo/internal/react/consistent-css-prop-usage

var lightH700Styles = (0, _core.css)((0, _typography.h700)({
  theme: {
    mode: 'light'
  }
}));

var FormHeaderContent = function FormHeaderContent(_ref) {
  var children = _ref.children;
  return (0, _core.jsx)("div", {
    css: formHeaderContentStyles
  }, children);
};

exports.FormHeaderContent = FormHeaderContent;

var FormHeaderDescription = function FormHeaderDescription(_ref2) {
  var children = _ref2.children;
  return (0, _core.jsx)("div", {
    css: formHeaderDescriptionStyles
  }, children);
};

exports.FormHeaderDescription = FormHeaderDescription;

var FormHeaderTitle = function FormHeaderTitle(_ref3) {
  var children = _ref3.children;

  var _useGlobalTheme = (0, _components.useGlobalTheme)(),
      mode = _useGlobalTheme.mode;

  return (0, _core.jsx)("h2", {
    css: [mode === 'light' ? lightH700Styles : darkH700Styles, formHeaderTitleStyles]
  }, children);
};

exports.FormHeaderTitle = FormHeaderTitle;

var FormHeaderWrapper = function FormHeaderWrapper(_ref4) {
  var children = _ref4.children;
  return (0, _core.jsx)("div", {
    css: formHeaderWrapperStyles
  }, children);
};
/**
 * __Form header__
 *
 * A form header contains the form component's heading and subheadings. This provides the correct padding
 * and styling for it.
 *
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/form/docs/layout)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/form/docs/layout)
 * - [Usage](https://atlaskit.atlassian.com/packages/design-system/form/docs/layout)
 */


var FormHeader = function FormHeader(_ref5) {
  var children = _ref5.children,
      description = _ref5.description,
      title = _ref5.title;
  return (0, _core.jsx)(FormHeaderWrapper, null, title && (0, _core.jsx)(FormHeaderTitle, null, title), description && (0, _core.jsx)(FormHeaderDescription, null, description), children && (0, _core.jsx)(FormHeaderContent, null, children));
};

var _default = FormHeader;
exports.default = _default;