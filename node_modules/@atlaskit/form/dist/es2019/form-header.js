/** @jsx jsx */
import { css, jsx } from '@emotion/core';
import { useGlobalTheme } from '@atlaskit/theme/components';
import { fontFamily as getFontFamily, gridSize as getGridSize } from '@atlaskit/theme/constants';
import { h700 } from '@atlaskit/theme/typography';
const gridSize = getGridSize();
const fontFamily = getFontFamily();
const formHeaderContentStyles = css({
  minWidth: '100%',
  marginTop: `${gridSize}px`
});
const formHeaderDescriptionStyles = css({
  marginTop: `${gridSize}px`
});
const formHeaderTitleStyles = css({
  marginTop: 0,
  marginRight: `${gridSize * 4}px`,
  lineHeight: `${gridSize * 4}px`,
  overflow: 'hidden',
  textOverflow: 'ellipsis',
  whiteSpace: 'nowrap'
});
const formHeaderWrapperStyles = css({
  fontFamily: `${fontFamily}`
}); // eslint-disable-next-line @repo/internal/react/consistent-css-prop-usage

const darkH700Styles = css(h700({
  theme: {
    mode: 'dark'
  }
})); // eslint-disable-next-line @repo/internal/react/consistent-css-prop-usage

const lightH700Styles = css(h700({
  theme: {
    mode: 'light'
  }
}));

const FormHeaderContent = ({
  children
}) => {
  return jsx("div", {
    css: formHeaderContentStyles
  }, children);
};

const FormHeaderDescription = ({
  children
}) => {
  return jsx("div", {
    css: formHeaderDescriptionStyles
  }, children);
};

const FormHeaderTitle = ({
  children
}) => {
  const {
    mode
  } = useGlobalTheme();
  return jsx("h2", {
    css: [mode === 'light' ? lightH700Styles : darkH700Styles, formHeaderTitleStyles]
  }, children);
};

const FormHeaderWrapper = ({
  children
}) => {
  return jsx("div", {
    css: formHeaderWrapperStyles
  }, children);
};
/**
 * __Form header__
 *
 * A form header contains the form component's heading and subheadings. This provides the correct padding
 * and styling for it.
 *
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/form/docs/layout)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/form/docs/layout)
 * - [Usage](https://atlaskit.atlassian.com/packages/design-system/form/docs/layout)
 */


const FormHeader = ({
  children,
  description,
  title
}) => {
  return jsx(FormHeaderWrapper, null, title && jsx(FormHeaderTitle, null, title), description && jsx(FormHeaderDescription, null, description), children && jsx(FormHeaderContent, null, children));
};

export default FormHeader;
export { FormHeaderContent, FormHeaderDescription, FormHeaderTitle };